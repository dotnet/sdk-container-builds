<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net7.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>

    <TargetsForTfmSpecificBuildOutput>
      $(TargetsForTfmSpecificBuildOutput);CopyProjectReferencesToPackage
    </TargetsForTfmSpecificBuildOutput>

    <!-- Tell the SDK to generate a deps.json file -->
    <GenerateDependencyFile>true</GenerateDependencyFile>

    <!-- Allow the packaging project to use the name `Microsoft.NET.Build.Containers` for the nuget package -->
    <Packageid>.</Packageid>

    <!-- While in prerelease, ship the symbols to everyone all the time. -->
    <DebugType>embedded</DebugType>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.Build.Utilities.Core" PrivateAssets="all" ExcludeAssets="runtime" />
  </ItemGroup>

  <!-- This target adds all of our PackageReference and ProjectReference's runtime assets to our package output. -->
  <Target Name="CopyProjectReferencesToPackage" DependsOnTargets="ResolveReferences">
    <ItemGroup>
      <BuildOutputInPackage Include="@(ReferenceCopyLocalPaths)" TargetPath="%(ReferenceCopyLocalPaths.DestinationSubPath)" />
    </ItemGroup>
  </Target>

  <!-- This target adds the generated deps.json file to our package output -->
  <Target Name="AddBuildDependencyFileToBuiltProjectOutputGroupOutput" BeforeTargets="BuiltProjectOutputGroup" Condition=" '$(GenerateDependencyFile)' == 'true'">
    <ItemGroup>
      <BuiltProjectOutputGroupOutput Include="$(ProjectDepsFilePath)" TargetPath="$(ProjectDepsFileName)" FinalOutputPath="$(ProjectDepsFilePath)" />
    </ItemGroup>
  </Target>

  <!-- Hacky workaround for the fact that we don't publish the package yet. -->
  <Target Name="CopyNupkgToCustomFolder" AfterTargets="Pack">
    <Copy SourceFiles="$(OutDir)..\Microsoft.NET.Build.Containers.$(Version).nupkg" DestinationFiles="..\Test.Microsoft.NET.Build.Containers.Filesystem\package\Microsoft.NET.Build.Containers.$(Version).nupkg" />
  </Target>
</Project>
